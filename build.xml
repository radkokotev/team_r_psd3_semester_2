<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project
	name="se-notes.demos.ant"
	basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant"
	default="build"
>
	<path id="project.classpath">

		<pathelement location="DCS_Timetable/bin" />

		<fileset dir="lib" />

	</path>


	<property name="install.dir" value=""/>


	<property name="exec.dir" value=""/>


	<target
		name="clean"
		description="Deletes all intermediate files."
	>

		<delete dir="DCS_Timetable/bin" />

	</target>


	<target
		name="cleanall"
		description="Deletes all files not included in the distribution archive."
		depends="clean"
	>

		<delete dir="lib" />
		<delete dir="." includes="*.jar"/>
		<ivy:cleancache/>

	</target>


	<target
		name="init"
		description="Initalises the distribution in preparation for compilation of code and documentation."
	>

		<mkdir dir="DCS_Timetable/bin"/>

	</target>


	<target
		name="resolve"
		description="Retrieves necessary dependencies for this project."
	>

		<ivy:retrieve />

	</target>


	<target
		name="compile"
		depends="init,resolve"
		description="Compiles all java class files."
	>

		<javac
			srcdir="DCS_Timetable/src"
			destdir="DCS_Timetable/bin"
			debuglevel="lines,vars,source"
			classpathref="project.classpath"
		/>

	</target>
	
	<target
		name="bundles"
		description="Builds OSGi bundles for the project."
		depends="compile"
	>

		<jar update="no" destfile="data.jar" manifest="config/osgi/DATA.MF">
			<fileset dir="bin/" includes="data/*.class" />
		</jar>
		
		<jar update="no" destfile="roles.jar" manifest="config/osgi/ROLES.MF">
			<fileset dir="bin/" includes="roles/*.class" />
		</jar>


	</target>
	
	<target
		name="osgi.init"
		description="Prepares an OSGi runtime environment with default bundles."
		depends="resolve"
	>

		<mkdir dir="bundle" />
		
		<copy todir="bundle">
			<fileset dir="lib" includes="org.apache.felix.gogo.shell-0.10.0.jar" />
			<fileset dir="lib" includes="org.apache.felix.bundlerepository-1.6.0.jar" />
			<fileset dir="lib" includes="org.apache.felix.gogo.command-0.12.0.jar" />
			<fileset dir="lib" includes="org.apache.felix.gogo.runtime-0.10.0.jar" />
		</copy>
		
	</target>
	
	<target
		name="osgi.run"
		depends="osgi.init"
	>
		
		<java
			classname="org.apache.felix.main.Main"
			fork="yes" taskname=""
		>
			
			<classpath>
				<pathelement location="lib/org.apache.felix.main-4.2.1.jar" />
				<pathelement location="lib/derby-10.10.1.1.jar" />
			</classpath>
			<jvmarg value="-Dfelix.config.properties=file:config/felix.properties" />
			<arg value="felix-cache" />
			
		</java>
		
	</target>
	
	<target
		name="run"
		depends="osgi.run"
		description="Invokes the application from the default entry point."
	>

	</target>


	<target
		name="test"
		description="Invokes the project's suite of JUnit test cases"
		depends="compile">

		<junit			
			printsummary="yes"
		>
			<classpath refid="project.classpath"/>
			<batchtest>
				<formatter type="plain" usefile="false"/>
       				<fileset dir="DCS_Timetable/src">
            				<include name="**/*Test*" />
      				 </fileset>
    			</batchtest>
		</junit>

	</target>


	<target
		name="build-jar"
		description="Creates an executable jar of the project class files, excluding test cases."
		depends="compile"
	>
		<jar
			destfile="helloworldproject.jar"
			basedir="DCS_Timetable/bin"
			excludes="**/test/**/*.class"
		/>

	</target>


	<target
		name="install"
		description="Copies the project jar and dependencies to ${install.dir} and an executable script 'helloworld' to ${exec.dir} (both set on command line)"
		depends="build-jar"
	>
		<fail
			message="$${install.dir} and $${exec.dir} properties not set.">
			<condition>
				<or>
					<equals arg1="${install.dir}" arg2=""/>
					<equals arg1="${exec.dir}" arg2=""/>
				</or>
			</condition>
		</fail>

		<copy todir="${install.dir}">
			<fileset dir="lib/" includes="*.jar"/>
			<fileset dir="./" includes="*.jar"/>
		</copy>

		<copy todir="${exec.dir}" file="config/helloworld.sh"/>

	  	<replace
	  		file="${exec.dir}/helloworld.sh"
	  		token="@INSTALLDIR"
	  		value="${install.dir}"
	  	/>

		<chmod
			perm="ugo+rx"
			file="${exec.dir}/helloworld.sh"
		/>

	</target>


	<target
		name="uninstall"
		description="Removes project artifacts from the environment"
	>
		<fail message="Not implemented."/>
	</target>


	<target
		name="build"
		depends="compile"
		description="Invokes the compile target."
	/>


</project>
